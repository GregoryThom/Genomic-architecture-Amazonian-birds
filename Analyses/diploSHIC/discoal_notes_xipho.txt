Note: Comment from Andrew Kern on the discoal issues:
discoal scales all parameters by 4N or 2N as appropriate. 
Thus the user sets \rho, which is equivalent to 4Nr where r is the 
rate per locus per generation. The same would be true for u -- that 
would be the mutation rate per locus per generation
-Based on these info, all params need to be scaled by the window size.

##Ne estimated with pipemaster = 517153
##r estimated with relernn = 1.2364009E-09

SMC++ rho: 0.002515337

rho up = 0.005030674
rho lo = 0.001257669

recombination prior = c(0.001257669,0.005030674) * 220000 # rate per bp * locus size  
        -Pre   = 276.6872 1106.7483

assuming stable pop size
pop. size estimate at 10 kya = 79643        

theta 
note: mutation rate is per generation per locus, so mu = 2.5e-9 / 2 * 220000 = 0.000275

theta prior = 0.000275 * 4 * c(79643 / 3 , 79643 * 3) # 1/3 to 3x Ne to account for variation across genome
          -Pt = 29.20243 262.82190

size = 18

n simulations 10000
window size = 220000
subwindow size = 200000

prior on F0 (Pf) = 0 0.2 # for soft sweep sims only
prior on tau (Pu) = between present and 10000 generations ago
   phleg  = c(0, 10000) / 4 / 79643
        -Pu = 0.00000000 0.03139008
prior on alpha (Pa) (2Ns) = selection coefficients between 0.00025 and 0.025
   phleg  = c(0.00050, 0.025) * 2 * 517153
        -Pa = 258.5765 25857.6500
   
11 windows x positions = 
0.045454545454545456
0.13636363636363635
0.22727272727272727 
0.3181818181818182
0.4090909090909091
0.5 
0.5909090909090909
0.6818181818181818
0.7727272727272727 
0.8636363636363636
0.9545454545454546 

population size changes in discoal format:
(limited to last 400,000 years)
-en 0.036 0 3.968 -en 0.036 0 4.022 -en 0.044 0 3.955 \
-en 0.048 0 3.719 -en 0.054 0 3.703 -en 0.064 0 3.743 \
-en 0.067 0 3.693 -en 0.082 0 3.487 -en 0.084 0 3.285 \
-en 0.102 0 3.208 -en 0.111 0 3.295 -en 0.125 0 3.154 \
-en 0.147 0 6.243 -en 0.154 0 6.227 -en 0.189 0 6.223 \
-en 0.195 0 7.355 -en 0.233 0 7.630 -en 0.258 0 7.726 \
-en 0.286 0 8.435 -en 0.341 0 8.703 -en 0.352 0 8.698 \
-en 0.434 0 8.570 -en 0.451 0 7.858 -en 0.534 0 7.903 \
-en 0.589 0 7.701 -en 0.657 0 7.474 -en 0.741 0 7.479 \
-en 0.808 0 6.244 -en 0.952 0 6.231 -en 0.994 0 4.462 \
-en 1.029 0 2.958 -en 1.162 0 3.057 -en 1.206 0 2.614 \